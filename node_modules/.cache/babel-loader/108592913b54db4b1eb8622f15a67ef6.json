{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OWNER\\\\Documents\\\\Axon-app\\\\plataforma\\\\src\\\\components\\\\Organisms\\\\Notes\\\\Nota.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Nota.css';\nimport Header from './componentes/Header';\nimport FormularioTareas from './componentes/FormularioTareas';\nimport ListaTareas from './componentes/ListaTareas';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nota = () => {\n  _s();\n\n  // Obtenemos las tareas guardadas de localstorage.\n  const tareasGuardadas = localStorage.getItem('tareas') ? JSON.parse(localStorage.getItem('tareas')) : []; // Establecemos el estado de las tareas.\n\n  const [tareas, cambiarTareas] = useState(tareasGuardadas); // Guardando el estado dentro de localstorage\n\n  useEffect(() => {\n    localStorage.setItem('tareas', JSON.stringify(tareas));\n  }, [tareas]); // Accedemos a localstorage y comprobamos si mostrarCompletadas es null\n\n  let configMostrarCompletadas = '';\n\n  if (localStorage.getItem('mostrarCompletadas') === null) {\n    configMostrarCompletadas = true;\n  } else {\n    configMostrarCompletadas = localStorage.getItem('mostrarCompletadas') === 'true';\n  } // El estado de mostrarCompletadas\n\n\n  const [mostrarCompletadas, cambiarMostrarCompletadas] = useState(configMostrarCompletadas);\n  useEffect(() => {\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n  }, [mostrarCompletadas]);\n  return /*#__PURE__*/_jsxDEV(Principal, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedor\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        mostrarCompletadas: mostrarCompletadas,\n        cambiarMostrarCompletadas: cambiarMostrarCompletadas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormularioTareas, {\n        tareas: tareas,\n        cambiarTareas: cambiarTareas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListaTareas, {\n        tareas: tareas,\n        cambiarTareas: cambiarTareas,\n        mostrarCompletadas: mostrarCompletadas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nota, \"E2ohMQ8Q0pJ7p4PMxVYwXvMFYA8=\");\n\n_c = Nota;\nconst Principal = styled.div`\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  padding: 50px 0;\n`;\n_c2 = Principal;\nexport default Nota;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Nota\");\n$RefreshReg$(_c2, \"Principal\");","map":{"version":3,"sources":["C:/Users/OWNER/Documents/Axon-app/plataforma/src/components/Organisms/Notes/Nota.jsx"],"names":["React","useState","useEffect","Header","FormularioTareas","ListaTareas","styled","Nota","tareasGuardadas","localStorage","getItem","JSON","parse","tareas","cambiarTareas","setItem","stringify","configMostrarCompletadas","mostrarCompletadas","cambiarMostrarCompletadas","toString","Principal","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA,QAAMC,eAAe,GACrBC,YAAY,CAACC,OAAb,CAAqB,QAArB,IACAC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CADA,GAC6C,EAF7C,CAFiB,CAMjB;;AACA,QAAM,CAACG,MAAD,EAASC,aAAT,IAA0Bb,QAAQ,CAACO,eAAD,CAAxC,CAPiB,CASjB;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAACM,OAAb,CAAqB,QAArB,EAA+BJ,IAAI,CAACK,SAAL,CAAeH,MAAf,CAA/B;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT,CAViB,CAcjB;;AACA,MAAII,wBAAwB,GAAG,EAA/B;;AACA,MAAGR,YAAY,CAACC,OAAb,CAAqB,oBAArB,MAA+C,IAAlD,EAAuD;AACrDO,IAAAA,wBAAwB,GAAG,IAA3B;AACD,GAFD,MAEO;AACLA,IAAAA,wBAAwB,GAAGR,YAAY,CAACC,OAAb,CAAqB,oBAArB,MAA+C,MAA1E;AACD,GApBgB,CAsBjB;;;AACA,QAAM,CAACQ,kBAAD,EAAqBC,yBAArB,IAAkDlB,QAAQ,CAACgB,wBAAD,CAAhE;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAACM,OAAb,CAAqB,oBAArB,EAA2CG,kBAAkB,CAACE,QAAnB,EAA3C;AACD,GAFQ,EAEN,CAACF,kBAAD,CAFM,CAAT;AAIA,sBACE,QAAC,SAAD;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,kBAAkB,EAAEA,kBADtB;AAEE,QAAA,yBAAyB,EAAEC;AAF7B;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,gBAAD;AAAkB,QAAA,MAAM,EAAEN,MAA1B;AAAkC,QAAA,aAAa,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,WAAD;AACE,QAAA,MAAM,EAAED,MADV;AAEE,QAAA,aAAa,EAAEC,aAFjB;AAGE,QAAA,kBAAkB,EAAEI;AAHtB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7CD;;GAAMX,I;;KAAAA,I;AA+CN,MAAMc,SAAS,GAAGf,MAAM,CAACgB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,S;AAWN,eAAed,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './Nota.css';\nimport Header from './componentes/Header';\nimport FormularioTareas from './componentes/FormularioTareas';\nimport ListaTareas from './componentes/ListaTareas';\nimport styled from 'styled-components';\n\nconst Nota = () => {\n  // Obtenemos las tareas guardadas de localstorage.\n  const tareasGuardadas = \n  localStorage.getItem('tareas') ? \n  JSON.parse(localStorage.getItem('tareas')) : [];\n\n  // Establecemos el estado de las tareas.\n  const [tareas, cambiarTareas] = useState(tareasGuardadas);\n\n  // Guardando el estado dentro de localstorage\n  useEffect(() => {\n    localStorage.setItem('tareas', JSON.stringify(tareas));\n  }, [tareas]);\n\n  // Accedemos a localstorage y comprobamos si mostrarCompletadas es null\n  let configMostrarCompletadas = '';\n  if(localStorage.getItem('mostrarCompletadas') === null){\n    configMostrarCompletadas = true;\n  } else {\n    configMostrarCompletadas = localStorage.getItem('mostrarCompletadas') === 'true';\n  }\n\n  // El estado de mostrarCompletadas\n  const [mostrarCompletadas, cambiarMostrarCompletadas] = useState(configMostrarCompletadas);\n\n  useEffect(() => {\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n  }, [mostrarCompletadas]);\n\n  return (\n    <Principal>\n    <div className=\"contenedor\">\n      <Header \n        mostrarCompletadas={mostrarCompletadas} \n        cambiarMostrarCompletadas={cambiarMostrarCompletadas}\n      />\n      <FormularioTareas tareas={tareas} cambiarTareas={cambiarTareas} />\n      <ListaTareas \n        tareas={tareas}\n        cambiarTareas={cambiarTareas}\n        mostrarCompletadas={mostrarCompletadas}\n      />\n    </div>\n    </Principal>\n  );\n}\n\nconst Principal = styled.div`\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  padding: 50px 0;\n`;\n\nexport default Nota;"]},"metadata":{},"sourceType":"module"}